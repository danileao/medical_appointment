{"level":"error","message":"TypeError: Cannot read properties of undefined (reading 'userRepository')\n    at /home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:14:50\n    at Generator.next (<anonymous>)\n    at /home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:4:12)\n    at handle (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:20:16)\n    at Layer.handle [as handle_request] (/home/dany/cursos/node/medical_appointment/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/dany/cursos/node/medical_appointment/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/home/dany/cursos/node/medical_appointment/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/home/dany/cursos/node/medical_appointment/node_modules/express/lib/router/layer.js:95:5)","timestamp":"12/10/2022 18:17:22"}
{"level":"error","message":"TypeError: Cannot read properties of undefined (reading 'userRepository')\n    at /home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:14:50\n    at Generator.next (<anonymous>)\n    at /home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:4:12)\n    at handle (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:20:16)\n    at Layer.handle [as handle_request] (/home/dany/cursos/node/medical_appointment/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/dany/cursos/node/medical_appointment/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/home/dany/cursos/node/medical_appointment/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/home/dany/cursos/node/medical_appointment/node_modules/express/lib/router/layer.js:95:5)","timestamp":"12/10/2022 18:18:19"}
{"level":"error","message":"TypeError: Cannot read properties of undefined (reading 'userRepository')\n    at /home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:14:50\n    at Generator.next (<anonymous>)\n    at /home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:4:12)\n    at handle (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:20:16)\n    at Layer.handle [as handle_request] (/home/dany/cursos/node/medical_appointment/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/dany/cursos/node/medical_appointment/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/home/dany/cursos/node/medical_appointment/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/home/dany/cursos/node/medical_appointment/node_modules/express/lib/router/layer.js:95:5)","timestamp":"12/10/2022 18:22:50"}
{"level":"error","message":"Error: Username already exists\n    at CreateUserUseCase.<anonymous> (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:24:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"12/10/2022 18:23:47"}
{"level":"error","message":"Error: Username already exists\n    at CreateUserUseCase.<anonymous> (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:24:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"13/10/2022 00:38:25"}
{"level":"error","message":"Error: Username already exists\n    at CreateUserUseCase.<anonymous> (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:24:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"13/10/2022 00:38:48"}
{"level":"error","message":"PARAMETER_REQUIRED_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:24:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"13/10/2022 00:39:54"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\n/home/dany/cursos/node/medical_appointment/src/modules/users/repositories/implementations/user.prisma.repository.ts:7:42\n\n  4 \n  5 export class UserPrismaRepository implements IUserRespository {\n  6   async findByUsername(username: string): Promise<User | undefined> {\n→ 7     const user = await prismaClient.user.findUnique(\nDatabase `medical_appointment` does not exist on the database server at `localhost:5432`.\n    at RequestHandler.handleRequestError (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:30857:13)\n    at RequestHandler.request (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:30834:12)\n    at async PrismaClient._request (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:31812:16)","timestamp":"19/10/2022 22:44:25"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\n/home/dany/cursos/node/medical_appointment/src/modules/users/repositories/implementations/user.prisma.repository.ts:7:42\n\n  4 \n  5 export class UserPrismaRepository implements IUserRespository {\n  6   async findByUsername(username: string): Promise<User | undefined> {\n→ 7     const user = await prismaClient.user.findUnique(\nDatabase `medical_appointment` does not exist on the database server at `localhost:5432`.\n    at RequestHandler.handleRequestError (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:30857:13)\n    at RequestHandler.request (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:30834:12)\n    at async PrismaClient._request (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:31812:16)","timestamp":"19/10/2022 22:50:24"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\n/home/dany/cursos/node/medical_appointment/src/modules/users/repositories/implementations/user.prisma.repository.ts:7:42\n\n  4 \n  5 export class UserPrismaRepository implements IUserRespository {\n  6   async findByUsername(username: string): Promise<User | undefined> {\n→ 7     const user = await prismaClient.user.findUnique(\nDatabase `medical_appointment` does not exist on the database server at `localhost:5432`.\n    at RequestHandler.handleRequestError (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:30857:13)\n    at RequestHandler.request (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:30834:12)\n    at async PrismaClient._request (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:31812:16)","timestamp":"19/10/2022 22:51:37"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\n/home/dany/cursos/node/medical_appointment/src/modules/users/repositories/implementations/user.prisma.repository.ts:7:42\n\n  4 \n  5 export class UserPrismaRepository implements IUserRespository {\n  6   async findByUsername(username: string): Promise<User | undefined> {\n→ 7     const user = await prismaClient.user.findUnique(\nDatabase `medical_appointment` does not exist on the database server at `localhost:5432`.\n    at RequestHandler.handleRequestError (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:30857:13)\n    at RequestHandler.request (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:30834:12)\n    at async PrismaClient._request (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:31812:16)","timestamp":"19/10/2022 22:51:44"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\n/home/dany/cursos/node/medical_appointment/src/modules/users/repositories/implementations/user.prisma.repository.ts:7:42\n\n  4 \n  5 export class UserPrismaRepository implements IUserRespository {\n  6   async findByUsername(username: string): Promise<User | undefined> {\n→ 7     const user = await prismaClient.user.findUnique(\nDatabase `medical_appointment` does not exist on the database server at `localhost:5432`.\n    at RequestHandler.handleRequestError (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:30857:13)\n    at RequestHandler.request (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:30834:12)\n    at async PrismaClient._request (/home/dany/cursos/node/medical_appointment/node_modules/@prisma/client/runtime/index.js:31812:16)","timestamp":"19/10/2022 22:52:00"}
{"level":"error","message":"Error: Username already exists\n    at CreateUserUseCase.<anonymous> (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:25:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"19/10/2022 22:52:33"}
{"level":"error","message":"Error: Username already exists\n    at CreateUserUseCase.<anonymous> (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:25:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"19/10/2022 22:52:42"}
{"level":"error","message":"Error: Username already exists\n    at CreateUserUseCase.<anonymous> (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:24:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"19/10/2022 22:53:31"}
{"level":"error","message":"USER_EXISTS_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:25:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"19/10/2022 22:58:32"}
{"level":"error","message":"USER_EXISTS_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:25:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"19/10/2022 22:58:49"}
{"level":"error","message":"Username already exists\n    at CreateUserUseCase.<anonymous> (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:25:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"19/10/2022 22:59:15"}
{"level":"error","message":"USER_EXISTS_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:25:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/dany/cursos/node/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"19/10/2022 22:59:31"}
